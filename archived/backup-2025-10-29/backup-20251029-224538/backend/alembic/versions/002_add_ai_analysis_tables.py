"""Add AI analysis tables

Revision ID: 002
Revises: 001
Create Date: 2025-01-29 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '002'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create ai_analysis table
    op.create_table('ai_analysis',
        sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
        sa.Column('symbol', sa.String(length=10), nullable=False, comment='股票代码'),
        sa.Column('role', sa.String(length=50), nullable=False, comment='分析师角色'),
        sa.Column('question', sa.Text(), nullable=False, comment='分析问题'),
        sa.Column('answer', sa.Text(), nullable=False, comment='AI回答'),
        sa.Column('confidence', sa.Float(), nullable=False, comment='置信度'),
        sa.Column('reasoning', sa.Text(), nullable=True, comment='推理过程'),
        sa.Column('suggestions', sa.JSON(), nullable=True, comment='建议列表'),
        sa.Column('metadata', sa.JSON(), nullable=True, comment='元数据'),
        sa.Column('context', sa.JSON(), nullable=True, comment='分析上下文'),
        sa.Column('data', sa.JSON(), nullable=True, comment='分析数据'),
        sa.Column('processing_time', sa.Float(), nullable=True, comment='处理时间(秒)'),
        sa.Column('tokens_used', sa.Integer(), nullable=True, comment='使用的token数量'),
        sa.Column('model_name', sa.String(length=100), nullable=True, comment='使用的模型名称'),
        sa.Column('user_id', sa.String(length=100), nullable=True, comment='用户ID'),
        sa.Column('session_id', sa.String(length=100), nullable=True, comment='会话ID'),
        sa.Column('status', sa.String(length=20), nullable=False, comment='状态'),
        sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.PrimaryKeyConstraint('id'),
        comment='AI分析记录表'
    )

    # Create indexes for ai_analysis
    op.create_index('ix_ai_analysis_id', 'ai_analysis', ['id'], unique=False)
    op.create_index('ix_ai_analysis_symbol', 'ai_analysis', ['symbol'], unique=False)
    op.create_index('ix_ai_analysis_role', 'ai_analysis', ['role'], unique=False)
    op.create_index('idx_ai_analysis_symbol_role', 'ai_analysis', ['symbol', 'role'], unique=False)
    op.create_index('idx_ai_analysis_created_at', 'ai_analysis', ['created_at'], unique=False)
    op.create_index('idx_ai_analysis_user_session', 'ai_analysis', ['user_id', 'session_id'], unique=False)

    # Create ai_analysis_feedback table
    op.create_table('ai_analysis_feedback',
        sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
        sa.Column('analysis_id', sa.Integer(), nullable=False, comment='分析记录ID'),
        sa.Column('rating', sa.Integer(), nullable=False, comment='评分(1-5)'),
        sa.Column('feedback_text', sa.Text(), nullable=True, comment='反馈内容'),
        sa.Column('helpful', sa.Integer(), nullable=False, comment='是否有用(1有用, 0无用)'),
        sa.Column('category', sa.String(length=50), nullable=True, comment='反馈类别'),
        sa.Column('user_id', sa.String(length=100), nullable=True, comment='用户ID'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.ForeignKeyConstraint(['analysis_id'], ['ai_analysis.id'], ),
        sa.PrimaryKeyConstraint('id'),
        comment='AI分析反馈表'
    )

    # Create indexes for ai_analysis_feedback
    op.create_index('ix_ai_analysis_feedback_id', 'ai_analysis_feedback', ['id'], unique=False)
    op.create_index('idx_ai_feedback_analysis_id', 'ai_analysis_feedback', ['analysis_id'], unique=False)
    op.create_index('idx_ai_feedback_user_id', 'ai_analysis_feedback', ['user_id'], unique=False)

    # Create ai_analysis_session table
    op.create_table('ai_analysis_session',
        sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
        sa.Column('session_id', sa.String(length=100), nullable=False, comment='会话ID'),
        sa.Column('user_id', sa.String(length=100), nullable=True, comment='用户ID'),
        sa.Column('title', sa.String(length=200), nullable=True, comment='会话标题'),
        sa.Column('symbols', sa.JSON(), nullable=True, comment='涉及的股票代码列表'),
        sa.Column('roles_used', sa.JSON(), nullable=True, comment='使用的分析师角色'),
        sa.Column('message_count', sa.Integer(), nullable=False, comment='消息数量'),
        sa.Column('total_tokens', sa.Integer(), nullable=False, comment='总token使用量'),
        sa.Column('is_active', sa.Integer(), nullable=False, comment='是否活跃(1活跃, 0结束)'),
        sa.Column('last_activity', sa.DateTime(), nullable=False, comment='最后活动时间'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('session_id'),
        comment='AI分析会话表'
    )

    # Create indexes for ai_analysis_session
    op.create_index('ix_ai_analysis_session_id', 'ai_analysis_session', ['id'], unique=False)
    op.create_index('ix_ai_analysis_session_session_id', 'ai_analysis_session', ['session_id'], unique=False)
    op.create_index('idx_ai_session_user_id', 'ai_analysis_session', ['user_id'], unique=False)
    op.create_index('idx_ai_session_last_activity', 'ai_analysis_session', ['last_activity'], unique=False)

    # Create ai_analysis_template table
    op.create_table('ai_analysis_template',
        sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
        sa.Column('name', sa.String(length=100), nullable=False, comment='模板名称'),
        sa.Column('description', sa.Text(), nullable=True, comment='模板描述'),
        sa.Column('role', sa.String(length=50), nullable=False, comment='分析师角色'),
        sa.Column('question_template', sa.Text(), nullable=False, comment='问题模板'),
        sa.Column('variables', sa.JSON(), nullable=True, comment='模板变量'),
        sa.Column('category', sa.String(length=50), nullable=True, comment='模板分类'),
        sa.Column('tags', sa.JSON(), nullable=True, comment='标签列表'),
        sa.Column('usage_count', sa.Integer(), nullable=False, comment='使用次数'),
        sa.Column('rating', sa.Float(), nullable=True, comment='平均评分'),
        sa.Column('is_public', sa.Integer(), nullable=False, comment='是否公开(1公开, 0私有)'),
        sa.Column('created_by', sa.String(length=100), nullable=True, comment='创建者ID'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.PrimaryKeyConstraint('id'),
        comment='AI分析模板表'
    )

    # Create indexes for ai_analysis_template
    op.create_index('ix_ai_analysis_template_id', 'ai_analysis_template', ['id'], unique=False)
    op.create_index('idx_ai_template_role', 'ai_analysis_template', ['role'], unique=False)
    op.create_index('idx_ai_template_category', 'ai_analysis_template', ['category'], unique=False)
    op.create_index('idx_ai_template_public', 'ai_analysis_template', ['is_public'], unique=False)

    # Create ai_analysis_cache table
    op.create_table('ai_analysis_cache',
        sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
        sa.Column('cache_key', sa.String(length=255), nullable=False, comment='缓存键'),
        sa.Column('symbol', sa.String(length=10), nullable=False, comment='股票代码'),
        sa.Column('role', sa.String(length=50), nullable=False, comment='分析师角色'),
        sa.Column('question_hash', sa.String(length=64), nullable=False, comment='问题哈希'),
        sa.Column('answer', sa.Text(), nullable=False, comment='AI回答'),
        sa.Column('confidence', sa.Float(), nullable=False, comment='置信度'),
        sa.Column('metadata', sa.JSON(), nullable=True, comment='元数据'),
        sa.Column('expires_at', sa.DateTime(), nullable=False, comment='过期时间'),
        sa.Column('hit_count', sa.Integer(), nullable=False, comment='命中次数'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('cache_key'),
        comment='AI分析缓存表'
    )

    # Create indexes for ai_analysis_cache
    op.create_index('ix_ai_analysis_cache_id', 'ai_analysis_cache', ['id'], unique=False)
    op.create_index('ix_ai_cache_cache_key', 'ai_analysis_cache', ['cache_key'], unique=False)
    op.create_index('ix_ai_cache_symbol', 'ai_analysis_cache', ['symbol'], unique=False)
    op.create_index('ix_ai_cache_role', 'ai_analysis_cache', ['role'], unique=False)
    op.create_index('idx_ai_cache_symbol_role', 'ai_analysis_cache', ['symbol', 'role'], unique=False)
    op.create_index('idx_ai_cache_question_hash', 'ai_analysis_cache', ['question_hash'], unique=False)
    op.create_index('idx_ai_cache_expires_at', 'ai_analysis_cache', ['expires_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop tables in reverse order
    op.drop_table('ai_analysis_cache')
    op.drop_table('ai_analysis_template')
    op.drop_table('ai_analysis_session')
    op.drop_table('ai_analysis_feedback')
    op.drop_table('ai_analysis')

    # ### end Alembic commands ###